# This easyconfig was created by the BEAR Software team at the University of Birmingham.
easyblock = 'MakeCp'

name = 'GBOOST'
version = '2'

homepage = "http://bioinformatics.ust.hk/BOOST.html#GBOOST%202.0"
description = """GBOOST 2.0 is a GPU implementation of advanced BOOST method (with covariates adjustment) based on
 the CUDA technology by Nvidia."""

toolchain = {'name': 'fosscuda', 'version': '2019b'}

source_urls = ['http://bioinformatics.ust.hk']
sources = ['%(name)s%(version)s.zip']
patches = [('%(name)s-%(version)s_fixes.patch', 1)]
checksums = [
    '6f5fa03593031b6c122d34d1a1baa25dcce4f5273c93a0bb42d3dcde7137ac9f',  # GBOOST2.zip
    '83d2c262c928f2411842563eb1bf1743e2dfe2cd216df78b6a1f7baf8f375412',  # GBOOST-2_fixes.patch
]

dependencies = []

start_dir = 'GBOOST2/source code'

import subprocess as _subprocess  # NOQA
_arch = _subprocess.check_output(['uname', '-m'], universal_newlines=True).strip()
if _arch == 'ppc64le':
    prebuildopts = 'export EXTRA_NVCC_FLAGS="-Xcompiler -mno-float128" && '

files_to_copy = [(['%(name)s%(version)s'], 'bin')]

sanity_check_paths = {
    'files': ['bin/%(name)s%(version)s'],
    'dirs': [],
}

sanity_check_commands = [
    'cd "%(builddir)s/%(name)s%(version)s/%(name)s%(version)s/executable file and sample data" && '
    '%(name)s%(version)s -n 1 -i filenamelist.txt -tt 10 -o out && '
    'head outInteractionResult.txt'
]

moduleclass = 'tools'
