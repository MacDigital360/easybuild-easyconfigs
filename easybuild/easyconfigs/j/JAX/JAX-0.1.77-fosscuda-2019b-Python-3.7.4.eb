# This easyconfig was created by the BEAR Software team at the University of Birmingham.
easyblock = 'ConfigureMake'

name = 'JAX'
version = '0.1.77'
versionsuffix = '-Python-%(pyver)s'

homepage = "https://github.com/google/jax"
description = """JAX is Autograd and XLA, brought together for high-performance machine learning research."""

toolchain = {'name': 'fosscuda', 'version': '2019b'}

builddependencies = [('Bazel', '2.0.0')]

dependencies = [
    ('Python', '3.7.4'),
    ('SciPy-bundle', '2019.10', versionsuffix),
    ('cuDNN', '7.6.4.38'),
]

source_urls = ['https://github.com/google/jax/archive']
sources = ['jax-v%(version)s.tar.gz']
checksums = ['18fa3bcebf4b1a526349db5a76a508784ec5d05324c192c40f240ccbf9480e26']
skipsteps = ['configure', 'build']

install_cmd = 'export TF_CUDA_PATHS=${EBROOTCUDA} && '
install_cmd += 'export GCC_HOST_COMPILER_PREFIX=$EBROOTBINUTILS/bin && '
# To prevent bazel builds on different hosts/architectures conflicting with each other
# we'll set HOME, inside which Bazel puts active files (in ~/.cache/bazel/...)
install_cmd += 'export HOME=%(builddir)s/.home/ && '
install_cmd += 'python build/build.py --enable_cuda --cuda_path ${EBROOTCUDA} '
install_cmd += '--cudnn_path ${EBROOTCUDNN} '
install_cmd += '--bazel_path ${EBROOTBAZEL}/bin/bazel '
# Tell Bazel to pass PYTHONPATH through to what it's building, so it can find scipy etc.
install_cmd += '--bazel_options=--action_env=PYTHONPATH '

# For ppc64le you need:
# install_cmd += '--bazel_options=--per_file_copt=.*cu\.cc.*@-nvcc_options=compiler-options=-mno-float128 '

install_cmd += '--noenable_mkl_dnn && '
install_cmd += '(cd build && pip install --prefix %(installdir)s .) && '  # install jaxlib
install_cmd += 'pip install --prefix %(installdir)s .'  # install jax

# We can't evaluate EBROOTCUDA in the module file, because Lmod evaluates it before
# it's loaded CUDA, and it doesn't work. So we HARDCODE it here for now...
modextravars = {'XLA_FLAGS': "--xla_gpu_cuda_data_dir=%(installdir)s/../../CUDA/10.1.243-GCC-8.3.0/bin"}

modextrapaths = {'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages'}

sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python%(pyshortver)s/site-packages/jax',
             'lib/python%(pyshortver)s/site-packages/jaxlib'],
}

moduleclass = 'data'
