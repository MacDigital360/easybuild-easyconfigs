easyblock = 'PythonPackage'

name = 'torchvision'
version = '0.5.0'
versionsuffix = '-Python-%(pyver)s-PyTorch-1.4.0'

homepage = 'https://github.com/pytorch/vision'
description = " Datasets, Transforms and Models specific to Computer Vision"

toolchain = {'name': 'fosscuda', 'version': '2019b'}

source_urls = ['https://github.com/pytorch/vision/archive']
sources = ['v%(version)s.tar.gz']
checksums = ['eb9afc93df3d174d975ee0914057a9522f5272310b4d56c150b955c287a4d74d']

builddependencies = [('CMake', '3.15.3')]

dependencies = [
    ('Python', '3.7.4'),
    ('Pillow-SIMD', '6.0.0'),
    ('PyTorch', '1.4.0', '-Python-%(pyver)s'),
]

use_pip = True
download_dep_fail = True

import subprocess as _subprocess  # NOQA
_arch = _subprocess.check_output(['uname', '-m'], universal_newlines=True).strip()
if _arch == 'ppc64le':
    # for ppc64le we need this avoid __ieee128 errors
    # torchvision requires std=c++14, but it is necessary to have that before the other items
    # so we specify it in the NVCC_FLAGS even though it is automatically added
    preinstallopts = 'export NVCC_FLAGS="-std=c++14 -Xcompiler -mno-float128" && '

moduleclass = 'vis'
