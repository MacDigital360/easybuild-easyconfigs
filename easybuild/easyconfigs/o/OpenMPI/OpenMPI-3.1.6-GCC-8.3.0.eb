name = 'OpenMPI'
version = '3.1.6'

homepage = 'https://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-3 implementation."""

toolchain = {'name': 'GCC', 'version': '8.3.0'}

source_urls = ['https://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads']
sources = [SOURCELOWER_TAR_GZ]
checksums = [
    '627d350846008dff233ff2acc8542d20000a6abc1daa7277244d060298f88001',  # openmpi-3.1.6.tar.gz
]

dependencies = [
    ('zlib', '1.2.11'),
    ('hwloc', '1.11.12')
]

configopts = '--enable-shared '
configopts += '--enable-mpirun-prefix-by-default '  # suppress failure modes in relation to mpirun path
configopts += '--with-hwloc=$EBROOTHWLOC '  # hwloc support

modextravars = {
    "OPAL_PREFIX": '%(installdir)s',
    "PMIX_INSTALL_PREFIX": '%(installdir)s',
    "OMPI_HOME": '%(installdir)s',
    "MPI_HOME": '%(installdir)s',
    "OSHMEM_HOME": '%(installdir)s',
    "SHMEM_HOME": '%(installdir)s',
}

import os as local_os  # NOQA
# Are we on an InfiniBand machine?
local_ib = int(local_os.environ.get('BB_IB_DETECTED', 0))
if local_ib:
    # Configure Slurm options
    configopts += '--with-pmi '  # srun support for mpi
    configopts += '--with-slurm '  # we want slurm suppport

    # Configure InfiniBand options
    configopts += "--with-verbs "
    osdependencies = [
        ('libibverbs-dev', 'libibverbs-devel', 'rdma-core-devel'),
        ('libpciaccess-devel', 'libpciaccess-dev'),
        ('libudev-devel', 'systemd-devel', 'libsystemd-dev'),
        ('rdma-core-devel', 'librdmacm-devel'),
    ]
    configopts += '--without-knem --without-mxm --without-hcoll --without-ucx '
else:
    print("Please make sure you're building on a VM that doesn't have InfiniBand or gpfs etc.")

moduleclass = 'mpi'
