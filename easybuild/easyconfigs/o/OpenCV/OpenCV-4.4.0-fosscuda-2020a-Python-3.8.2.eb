name = 'OpenCV'
version = '4.4.0'
versionsuffix = '-Python-%(pyver)s'

homepage = 'https://opencv.org/'
description = """OpenCV (Open Source Computer Vision Library) is an open source computer vision
 and machine learning software library. OpenCV was built to provide
 a common infrastructure for computer vision applications and to accelerate
 the use of machine perception in the commercial products."""

toolchain = {'name': 'fosscuda', 'version': '2020a'}

source_urls = [
    'https://github.com/opencv/opencv/archive/',
    # the hash is version dependent! see 3rdparty/ippicv/ippicv.cmake
    'https://raw.githubusercontent.com/opencv/opencv_3rdparty/32e315a5b106a7b89dbed51c28f8120a48b368b4/ippicv',
]
sources = [
    '%(version)s.zip',
    {'filename': 'ippicv_2019_lnx_intel64_general_20180723.tgz', 'extract_cmd': "cp %s %(builddir)s"},
    {
        'source_urls': ['https://github.com/opencv/opencv_contrib/archive/'],
        'download_filename': '%(version)s.tar.gz',
        'filename': SOURCE_TAR_GZ,
    },
]
checksums = [
    '7faa0991c74cda52313ee37ef73f3e451332a47e7aa36c2bb2240b69f5002d27',  # 4.4.0.zip
    'fc167cb60deb8924339a7050f3da168bb02e221b2d6b8c00139d1fa7eace0c7d',  # ippicv_2019_lnx_intel64_general_20180723.tgz
    'a69772f553b32427e09ffbfd0c8d5e5e47f7dab8b3ffc02851ffd7f912b76840',  # OpenCV-4.4.0.tar.gz
]

checksums = [
    '7faa0991c74cda52313ee37ef73f3e451332a47e7aa36c2bb2240b69f5002d27',  # 4.4.0.zip
    'fc167cb60deb8924339a7050f3da168bb02e221b2d6b8c00139d1fa7eace0c7d',  # ippicv_2019_lnx_intel64_general_20180723.tgz
    'a69772f553b32427e09ffbfd0c8d5e5e47f7dab8b3ffc02851ffd7f912b76840',  # OpenCV-4.4.0.tar.gz
]

checksums = [
]

builddependencies = [
    ('CMake', '3.16.4'),
]

dependencies = [
    ('Python', '3.8.2'),
    ('SciPy-bundle', '2020.03', versionsuffix),  # for numpy
    ('zlib', '1.2.11'),
    ('FFmpeg', '4.2.2'),
    ('libjpeg-turbo', '2.0.4'),
    ('libpng', '1.6.37'),
    ('LibTIFF', '4.1.0'),
    ('JasPer', '2.0.14'),
    ('Java', '11', '', True),
    ('ant', '1.10.8', '-Java-%(javaver)s', True),
    ('GLib', '2.64.1'),
    ('GTK+', '3.24.17'),
    ('cuDNN', '8.0.4.30', '-CUDA-11.0.2', True),
]

# cudev module is required to build OpenCV with CUDA support,
# so copy it to a separate directory (to avoid building *all* modules in opencv_contrib...)
preconfigopts = "mkdir %(builddir)s/opencv_modules && "
preconfigopts += "cp -a %(builddir)s/opencv_contrib-4.4.0/modules/cudev/ %(builddir)s/opencv_modules/ && "

configopts = "-DOPENCV_EXTRA_MODULES_PATH=%(builddir)s/opencv_modules/ -DBUILD_opencv_cudev=ON"

import subprocess as _subprocess  # NOQA
_arch = _subprocess.check_output(['uname', '-m'], universal_newlines=True).strip()
if _arch == 'ppc64le':
    # for ppc64le we need c++11 (to avoid __ieee128 errors
    configopts += ' -DCUDA_NVCC_FLAGS="-Xcompiler;-mno-float128"'

moduleclass = 'vis'
